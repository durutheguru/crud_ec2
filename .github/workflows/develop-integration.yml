name: Develop Branch Integration

on:
  pull_request:
    branches: [ develop ]
    types: [ closed ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.1.x
            5.0.x

      - name: Installing GitVersion
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.3.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Setup Java 17 env
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Cache Maven packages
        uses: actions/cache@v3
        working-directory: ./service
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Evaluate New Artifact Version
        working-directory: ./service
        run: |
          NEW_VERSION=${{ steps.gitversion.outputs.semVer }}
          echo "Artifact Semantic Version: $NEW_VERSION"
          mvn versions:set -DnewVersion=${NEW_VERSION}-SNAPSHOT -s settings.xml

      - name: Build and analyze
        working-directory: ./service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -e package -s settings.xml -f pom.xml

      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          RELEASE_TAG=${{ steps.gitversion.outputs.semVer }}
          docker build --build-arg release_version=$RELEASE_TAG -t ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:$RELEASE_TAG .
          docker build --build-arg release_version=$RELEASE_TAG --platform linux/arm64/v8 -t ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:arm64v8-latest -t ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:arm64v8-$RELEASE_TAG .

      - name: Publish Docker image
        run: |
          RELEASE_TAG=${{ steps.gitversion.outputs.semVer }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:$RELEASE_TAG
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:arm64v8-latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/messing-jar-service:arm64v8-$RELEASE_TAG
          echo "Pushed Docker Images with New Release"

      - name: Upgrading Version
        run: |
          RELEASE_TAG=${{ steps.gitversion.outputs.semVer }}
          echo $RELEASE_TAG > version.ver
          ls
          git config user.email ${{ secrets.GIT_EMAIL }}
          git config user.name ${{ secrets.GIT_USERNAME }}
          git add .
          git commit -m "Upgraded Version >> $RELEASE_TAG" || true






      - name: Set Commit Message
        id: commit
        run: |
          ${{ startsWith(github.head_ref, 'feature/') }} && echo ::set-output name=message::"+semver: feature" \
          || echo ::set-output name=message::"+semver: patch"

      - name: Upgrading Version
        env:
          COMMIT_MSG: ${{ steps.commit.outputs.message }}
        run: |
          git config user.email ${{ secrets.GIT_EMAIL }}
          git config user.name ${{ secrets.GIT_USERNAME }}
          git add .
          git commit -m "$COMMIT_MSG" --allow-empty || true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: develop
          github_token: ${{ secrets.GITHUB_TOKEN }}



  merge-main:
    name: Merge to Main
    needs: [ build ]
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fetching
        run: |
          git fetch --all

      - name: Merge to Main
        uses: devmasx/merge-branch@1.4.0
        with:
          type: now
          target_branch: 'main'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

